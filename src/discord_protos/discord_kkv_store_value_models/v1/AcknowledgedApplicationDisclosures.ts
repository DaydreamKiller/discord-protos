// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "discord_kkv_store_value_models/v1/AcknowledgedApplicationDisclosures.proto" (package "discord_protos.discord_kkv_store_value_models.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "../../google/protobuf/timestamp";
/**
 * @generated from protobuf message discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures
 */
export interface AcknowledgedApplicationDisclosures {
    /**
     * @generated from protobuf field: repeated discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures.AcknowledgedApplicationDisclosure acked_disclosures = 1
     */
    ackedDisclosures: AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure[];
}
/**
 * @generated from protobuf message discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures.AcknowledgedApplicationDisclosure
 */
export interface AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure {
    /**
     * @generated from protobuf field: discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures.ApplicationDisclosureType disclosure_type = 1
     */
    disclosureType: AcknowledgedApplicationDisclosures_ApplicationDisclosureType;
    /**
     * @generated from protobuf field: optional google.protobuf.Timestamp acked_at = 2
     */
    ackedAt?: Timestamp;
}
/**
 * @generated from protobuf enum discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures.ApplicationDisclosureType
 */
export enum AcknowledgedApplicationDisclosures_ApplicationDisclosureType {
    /**
     * @generated from protobuf enum value: APPLICATION_DISCLOSURE_TYPE_UNSPECIFIED_DISCLOSURE = 0;
     */
    UNSPECIFIED_DISCLOSURE = 0,
    /**
     * @generated from protobuf enum value: APPLICATION_DISCLOSURE_TYPE_IP_LOCATION = 1;
     */
    IP_LOCATION = 1,
    /**
     * @generated from protobuf enum value: APPLICATION_DISCLOSURE_TYPE_DISPLAYS_ADVERTISEMENTS = 2;
     */
    DISPLAYS_ADVERTISEMENTS = 2,
    /**
     * @generated from protobuf enum value: APPLICATION_DISCLOSURE_TYPE_PARTNER_SDK_DATA_SHARING_MESSAGE = 3;
     */
    PARTNER_SDK_DATA_SHARING_MESSAGE = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class AcknowledgedApplicationDisclosures$Type extends MessageType<AcknowledgedApplicationDisclosures> {
    constructor() {
        super("discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures", [
            { no: 1, name: "acked_disclosures", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure }
        ]);
    }
    create(value?: PartialMessage<AcknowledgedApplicationDisclosures>): AcknowledgedApplicationDisclosures {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.ackedDisclosures = [];
        if (value !== undefined)
            reflectionMergePartial<AcknowledgedApplicationDisclosures>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AcknowledgedApplicationDisclosures): AcknowledgedApplicationDisclosures {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures.AcknowledgedApplicationDisclosure acked_disclosures */ 1:
                    message.ackedDisclosures.push(AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AcknowledgedApplicationDisclosures, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures.AcknowledgedApplicationDisclosure acked_disclosures = 1; */
        for (let i = 0; i < message.ackedDisclosures.length; i++)
            AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure.internalBinaryWrite(message.ackedDisclosures[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures
 */
export const AcknowledgedApplicationDisclosures = new AcknowledgedApplicationDisclosures$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure$Type extends MessageType<AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure> {
    constructor() {
        super("discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures.AcknowledgedApplicationDisclosure", [
            { no: 1, name: "disclosure_type", kind: "enum", T: () => ["discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures.ApplicationDisclosureType", AcknowledgedApplicationDisclosures_ApplicationDisclosureType, "APPLICATION_DISCLOSURE_TYPE_"] },
            { no: 2, name: "acked_at", kind: "message", T: () => Timestamp }
        ]);
    }
    create(value?: PartialMessage<AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure>): AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.disclosureType = 0;
        if (value !== undefined)
            reflectionMergePartial<AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure): AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures.ApplicationDisclosureType disclosure_type */ 1:
                    message.disclosureType = reader.int32();
                    break;
                case /* optional google.protobuf.Timestamp acked_at */ 2:
                    message.ackedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.ackedAt);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures.ApplicationDisclosureType disclosure_type = 1; */
        if (message.disclosureType !== 0)
            writer.tag(1, WireType.Varint).int32(message.disclosureType);
        /* optional google.protobuf.Timestamp acked_at = 2; */
        if (message.ackedAt)
            Timestamp.internalBinaryWrite(message.ackedAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_kkv_store_value_models.v1.AcknowledgedApplicationDisclosures.AcknowledgedApplicationDisclosure
 */
export const AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure = new AcknowledgedApplicationDisclosures_AcknowledgedApplicationDisclosure$Type();
